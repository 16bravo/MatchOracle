name: DB Initialisation

on:
  workflow_dispatch:

jobs:
  init_db:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Restore dependency cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
  
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x
          
      - name: Check if database exists
        id: check-db
        run: |
            if [ -f data/BravoRanking.db ]; then
              echo "Database exists already. No need for init."
              echo "init_required=false" >> $GITHUB_OUTPUT
            else
              echo "Database does not exist. Init needed."
              echo "init_required=true" >> $GITHUB_OUTPUT
            fi

      - name: Install dependencies
        if: steps.check-db.outputs.init_required == 'true'
        run: pip install --upgrade --force-reinstall -r requirements.txt

      - name: Create .kaggle directory
        if: steps.check-db.outputs.init_required == 'true'
        run: mkdir -p /home/runner/.kaggle

      - name: Set up Kaggle credentials
        if: steps.check-db.outputs.init_required == 'true'
        run: echo "$KAGGLE_JSON" > /home/runner/.kaggle/kaggle.json && chmod 600 /home/runner/.kaggle/kaggle.json
        env:
          KAGGLE_JSON: ${{ secrets.KAGGLE_JSON }}

      - name: Run Teams Table creation script
        if: steps.check-db.outputs.init_required == 'true'
        run: python scripts/010_DB_Initialisation/011_Create_Insert_Teams.py

      - name: Run Rankings Table creation script
        if: steps.check-db.outputs.init_required == 'true'
        run: python scripts/010_DB_Initialisation/012_Create_Rankings.py

      - name: Run Matches Table creation script
        if: steps.check-db.outputs.init_required == 'true'
        run: python scripts/010_DB_Initialisation/013_Create_Matches.py

      - name: Commit changes
        if: steps.check-db.outputs.init_required == 'true'
        run: |
          git config --global user.email "${{ secrets.GIT_EMAIL }}"
          git config --global user.name "${{ secrets.GIT_USERNAME }}"
          if git diff --quiet data/BravoRanking.db; then
            echo "No changes in BravoRanking.db. Skipping commit."
          else
            git add data/BravoRanking.db
            git commit -m "Database Creation"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}
            git push
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sauvegarder le cache des d√©pendances
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
